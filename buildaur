#!/usr/bin/env bash
black=($(cat /usr/share/buildaur/blacklist))

install(){
	mkdir -p ~/.cache/gitaur/build
	cd ~/.cache/gitaur/build
	rm -rf  ~/.cache/gitaur/build/$2
	echo ":: Clonig git repository..."
	git clone https://aur.archlinux.org/$2.git
	cd ~/.cache/gitaur/build/$2
	echo ":: Edit the PKGBUILD? [y/N]"
	read ans
	if [[ $ans == n ]] || [[ $ans == "" ]]
	then
		echo ":: Going on..."
	else
		nano ./PKGBUILD
	fi
	echo ":: Making and installing the package..."
	makepkg -sif
}


update(){
	maxcount=$(expr $# - 1)
	count=1
	while [[ $# -gt 1 ]]
	do
		key=$2
		ver=$(pacman -Q $key | cut -d" " -f2 | xargs)
		res=$(curl -s 'https://aur.archlinux.org/rpc/?v=5&type=multiinfo&arg[]='$key'')
		remotever=$(echo $res | cut -d'"' -f26)
		if [[ $(echo ${black[*]} | sed -e 's/ /\n/g'| egrep -xE $key) = "$key" ]]
		then
			echo "($count/$maxcount) $key is at the blacklist and will not be updated!"
		else
			if [ $(echo $res | cut -d'"' -f9) = ":0," ]
			then
				echo "($count/$maxcount) $key is not in the AUR!"
			else
				if [ $remotever = "$ver" ]
				then
					echo "($count/$maxcount) $key-$ver is up to date"
				else
					echo "($count/$maxcount) $key-$ver is out of date! $remotever is available!"
					echo ":: Should it be updated? [Y/n]"
					read ans
					if [[ $ans == y ]] || [[ $ans == "" ]]
					then
						sudo pacman -Sy
						install -t $key && echo ":: Package installed succesfully!" || echo ":: WARNING: Package installation FAILED!"
					fi
				fi
			fi
		fi
		count=$(expr $count + 1)
		shift
	done
}

case $1 in
	-S)
	install $@
	exit 0
	;;
	-Q)
	while [[ $# -gt 1 ]]
	do
		key=$2
		echo $key $(curl -s 'https://aur.archlinux.org/rpc/?v=5&type=multiinfo&arg[]='$key'' | cut -d'"' -f26) "(local: $(pacman -Qs $key | cut -d" " -f2 | xargs))"
		echo "    "$(curl -s 'https://aur.archlinux.org/rpc/?v=5&type=multiinfo&arg[]='$key'' | cut -d'"' -f30)
		shift
	done
	exit 0
	;;
	-Sy)
	update $@
	exit 0
	;;
	-Syu)
	update -t $(pacman -Qqm)
	exit 0
	;;
esac
